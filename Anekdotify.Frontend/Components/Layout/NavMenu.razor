@using Anekdotify.Frontend.Services
@using Microsoft.IdentityModel.JsonWebTokens
@inject NavigationManager NavigationManager
@inject INavigationHistoryService NavigationHistory

<nav class="navbar navbar-expand-lg navbar-light bg-white px-2">
    <div class="container-fluid">
        <div class="d-flex align-items-center">
            <a class="navbar-brand text-dark fw-bold ms-1" href="/"
                style="letter-spacing:1px; font-size: 1.5rem; line-height: 1;">
                AnekDOTify
            </a>
            @if (_showBackButton)
            {
                <button class="btn btn-outline-light me-2 text-dark px-3 d-flex align-items-center" @onclick="GoBack"
                    title="Go Back" style="font-size: 1.7rem;">
                    <i class="bi bi-arrow-left" style="font-size: 2.3rem; font-weight: bold; margin-right: -0.2rem;"></i>
                </button>
            }
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
            aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
            <ul class="navbar-nav align-items-center gap-lg-2 gap-1 flex-row flex-lg-row flex-nowrap">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item d-flex align-items-center ms-auto">
                            <span class="navbar-text text-dark me-3 mb-1 mb-lg-0" style="font-size:1rem;">
                                Welcome, @context.User.FindFirst(JwtRegisteredClaimNames.GivenName)?.Value!
                            </span>
                            <a class="btn btn-outline-dark btn-sm d-flex align-items-center px-2 py-1 me-2 mb-1 mb-lg-0"
                                href="/hub" style="min-width:70px; font-size:1rem;">
                                <i class="bi bi-person-circle me-1"></i>
                                <span>Profile</span>
                            </a>
                            <a class="btn btn-outline-secondary btn-sm d-flex align-items-center px-2 py-1 mb-1 mb-lg-0"
                                href="javascript:void(0)" @onclick="Logout" style="min-width:70px; font-size:1rem;">
                                <i class="bi bi-box-arrow-right me-1"></i>
                                <span>Logout</span>
                            </a>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <a class="btn btn-secondary btn-sm mb-1 mb-lg-0" href="/register">
                                <i class="bi bi-person-plus me-1"></i> Register
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="btn btn-outline-dark btn-sm mb-1 mb-lg-0" href="/login">
                                <i class="bi bi-box-arrow-in-right me-1"></i> Login
                            </a>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {

    private bool _showBackButton = false;

    private void Logout()
    {
        NavigationManager.NavigateTo("/logout", forceLoad: true);
    }

    protected override void OnInitialized()
    {
        NavigationHistory.OnNavigationChanged += OnNavigationChanged;
        UpdateBackButton();
    }

    private void OnNavigationChanged(bool canGoBack)
    {
        UpdateBackButton();
        InvokeAsync(StateHasChanged);
    }

    private void UpdateBackButton()
    {
        _showBackButton = NavigationHistory.CanGoBack && !IsPreviousPageLoginOrRegister();
    }

    private bool IsPreviousPageLoginOrRegister()
    {
        var historyField = typeof(NavigationHistoryService).GetField("_navigationHistory",
        System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
        var stack = historyField?.GetValue(NavigationHistory) as Stack<string>;
        if (stack != null && stack.Count > 0)
        {
            var prev = stack.Peek();
            return prev.Contains("/login", StringComparison.OrdinalIgnoreCase) || prev.Contains("/register",
            StringComparison.OrdinalIgnoreCase);
        }
        var uri = NavigationManager.Uri.ToLower();
        return uri.Contains("/login") || uri.Contains("/register");
    }

    private void GoBack()
    {
        NavigationHistory.GoBack();
    }

    public void Dispose()
    {
        NavigationHistory.OnNavigationChanged -= OnNavigationChanged;
    }
}