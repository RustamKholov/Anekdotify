@using Anekdotify.Frontend.Components.BaseComponents
@inject ApiClient ApiClient
@inject IToastService ToastService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="d-flex justify-content-center align-items-center w-100 h-100" style="min-height: 60vh;">
    <div style="max-width: 420px; width: 100%;">
        <div class="position-relative">
            <JokeCard Joke="@joke" OnFirstFlip="OnFirstFlipAsync" IsPlaceholder="@(joke == null)" />
            <div class="w-100">
                @if (joke != null)
                {
                    <CommentsModal JokeId="@joke.JokeId" OnCommentsChanged="UpdateComments" />
                }
            </div>
        </div>
    </div>
</div>

@code {

    private JokeDTO? joke;

    private async Task OnFirstFlipAsync()
    {
        if (joke == null)
        {
            var result = await ApiClient.GetAsync<JokeDTO>("api/joke/random");
            if (result.IsSuccess && result.Data != null)
            {
                joke = result.Data;
                StateHasChanged();
            }
            else
            {
                ToastService.ShowError(result.ErrorMessage ?? "Failed to fetch joke.");
            }
        }
    }


    private void UpdateComments(List<CommentDTO> comments)
    {
        if (joke != null)
        {
            joke.Comments = comments;
            StateHasChanged();
        }
    }
}