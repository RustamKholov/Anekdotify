@page "/login"
@using Microsoft.AspNetCore.Mvc
@layout MainLayout
@inject ApiClient ApiClient
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode RenderMode.InteractiveServer

<div class="d-flex justify-content-center align-items-center h-100 w-100">
    <div class=" card shadow-lg" style="width: 25rem;">
        <div class="card-body p-4">
            <h4 class="card-title text-center mb-4">Login</h4>
            <EditForm Model="loginModel" FormName="login" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="username" class="form-label">Username/Email</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                    <ValidationMessage For="@(() => loginModel.Username)" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                </div>
                <div class="d-grid mt-4">
                    <button type="submit" class="btn btn-dark">
                        @if (isLoading)
                        {
                            <div class="text-center">
                                <div class="spinner-border" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a>Login</a>
                        }
                    </button>
                </div>
                <a href="/register" class="d-block text-center mt-3">Don't have an account? Register</a>
            </EditForm>
        </div>
    </div>
</div>


@code {
    private LoginDto loginModel = new LoginDto();
    [Inject] 
    private IToastService? ToastService { get; set; }

    private bool isLoading = false;

    private async Task HandleLogin()
    {
        try
        {
            isLoading = true;
            var response = await ApiClient.PostAsync<LoginResponseModel, LoginDto>("api/account/login", loginModel);
            if (response.IsSuccess && response.Data != null)
            {
                await ((CustomAuthStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(response.Data);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ToastService?.ShowError("Login failed. Please check your credentials.");
            }
            loginModel = new LoginDto();
        }
        catch (Exception e)
        {
            ToastService?.ShowError($"An error occurred while logging in: {e.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
