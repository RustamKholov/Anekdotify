@page "/login"

@layout MainLayout
@inject ApiClient ApiClient
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode RenderMode.InteractiveServer

<div class="container mt-5">
    <EditForm Model="loginModel" FormName="login" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    <button type="submit" class="btn btn-primary mt-3">Login</button>
    </EditForm>
</div>

@code {
    private LoginDTO loginModel = new LoginDTO();

    private async Task HandleLogin()
    {
        var res = await ApiClient.PostAsync<LoginResponseModel, LoginDTO>("api/account/login", loginModel);
        if(res != null && res.Token != null)
        {
            await ((CustomAuthStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(res.Token);
            NavigationManager.NavigateTo("/");
        }
    }
}
