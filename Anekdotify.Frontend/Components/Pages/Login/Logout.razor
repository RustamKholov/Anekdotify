@page "/logout"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService

@code {
    protected override async Task OnInitializedAsync()
    {
        var customAuthProvider = AuthenticationStateProvider as CustomAuthStateProvider;
        if (customAuthProvider != null)
        {
            await customAuthProvider.MarkUserAsLoggedOut();
        }
        await LocalStorageService.RemoveItemAsync("toastShown");
        NavigationManager.NavigateTo("/login", true);
    }
}
