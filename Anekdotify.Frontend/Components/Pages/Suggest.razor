
@using Anekdotify.Models.DTOs.Classification
@inject ApiClient ApiClient
@inject IToastService Toast

<div class="d-flex flex-column flex-md-row gap-4 justify-content-center align-items-center w-100 mx-auto"
    style="width:100%; max-width:1200px; margin:0 auto;">
    <!-- Suggest Joke Card -->
    <div class="card shadow-sm rounded-4 p-4 bg-white text-dark flex-fill w-100"
        style="min-width:260px; max-width:420px;">
        <h5 class="mb-3 text-center">Suggest a Joke</h5>
        <EditForm Model="newJoke" OnValidSubmit="SubmitJoke">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <InputSelect @bind-Value="newJoke.ClassificationId" class="form-select">
                    <option value="">Category</option>
                    @if(classifications != null)
                    {
                        foreach (var c in classifications)
                        {
                            <option value="@c.ClassificationId">@c.Name</option>
                        }
                    }
                    else
                    {
                        <option disabled>Loading categories...</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <InputTextArea @bind-Value="newJoke.Text" class="form-control" rows="3" placeholder="Your joke..." />
            </div>
            <div class="d-grid">
                <button class="btn btn-secondary" type="submit">Submit</button>
            </div>
        </EditForm>
    </div>

    <!-- Suggested Jokes Card -->
    <div class="card shadow-sm rounded-4 p-4 bg-white text-dark flex-fill w-100"
        style="min-width:260px; max-width:420px; max-height:70vh; overflow-y:auto;">
        <h6 class="mb-3 text-center">Your Suggestions</h6>
        @if (suggestedJokes == null)
        {
            <div class="text-muted text-center">Loading your suggestions...</div>
        }
        else if (!suggestedJokes.Any())
        {
            <div class="text-muted text-center">You haven't suggested any jokes yet.</div>
        }
        else
        {
            @foreach (var joke in suggestedJokes)
            {
                <SuggestedJokeCard Joke="joke" />
            }
        }
    </div>
</div>

@code {
    private List<ClassificationDetailedDTO>? classifications;
    private JokeCreateDTO newJoke = new();
    private List<SuggestedJokeDTO>? suggestedJokes;

    protected override async Task OnInitializedAsync()
    {
        var res = await ApiClient.GetAsync<List<ClassificationDetailedDTO>>("api/classification");
        if (res.IsSuccess)
        {
            classifications = res.Data ?? new List<ClassificationDetailedDTO>();
        }
        else
        {
            Toast.ShowError("Failed to load categories.");
        }
        await LoadUserSuggestions();
    }
    private async Task LoadUserSuggestions()
    {
        var res = await ApiClient.GetAsync<List<SuggestedJokeDTO>>("api/joke/suggested-by-me");
        if (res.IsSuccess)
            suggestedJokes = res.Data ?? new List<SuggestedJokeDTO>();
        else
            Toast.ShowError("Failed to load your suggestions.");
    }
    private async Task SubmitJoke()
    {
        var response = await ApiClient.PostAsync<SuggestedJokeDTO, JokeCreateDTO>("api/joke/suggest", newJoke);
        if (response.IsSuccess)
        {
            if (response.Data != null)
            {
                var classificationName = classifications != null
                    ? classifications.FirstOrDefault(c => c.ClassificationId == newJoke.ClassificationId)?.Name
                    : null;
                if (classificationName != null)
                {
                    response.Data.ClassificationName = classificationName;
                }
            }
            Toast.ShowSuccess("Joke submitted for review!");
            newJoke = new(); // reset form
            await LoadUserSuggestions();
        }
        StateHasChanged();
    }
}