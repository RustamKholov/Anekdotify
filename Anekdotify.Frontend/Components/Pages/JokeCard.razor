@using Anekdotify.Common
@using Anekdotify.Frontend.Components.BaseComponents
@using Anekdotify.Models.DTOs.JokeRating
@using Microsoft.AspNetCore.Mvc
@inject NavigationManager NavigationManager
@inject ApiClient ApiClient
@inject IToastService ToastService
@rendermode @(new InteractiveServerRenderMode(prerender:false))


<div class="card shadow-sm rounded-4 mb-1 p-3"
     style="w-100; height: 30vh; position: relative; overflow: auto;" id="joke_card_@Joke?.JokeId">

    <!-- Badge -->
    <span class="badge rounded-pill bg-light border text-muted position-absolute top-1 end-0 me-3">@((Joke != null) ? Joke.ClassificationName : "")</span>

    <!-- Admin Tools -->
    <AuthorizeView Roles="Admin, Moderator">
        <Authorized>
            <div class="card-header bg-transparent border-bottom-0 d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    @if (Joke != null)
                    {
                        <a class="btn btn-outline-secondary btn-sm me-2" href="@JokeUrl(Joke.JokeId)" title="Edit">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <button class="btn btn-outline-danger" @onclick="() => { DeleteId = Joke.JokeId; Modal?.Show(); }">
                        <i class="bi bi-trash"></i>
                        </button>
                    }
                </div>
            </div>
        </Authorized>
    </AuthorizeView>

    <!-- Joke Content -->
    <div class="card-body d-flex flex-column justify-content-center align-items-center text-center">
        <p class="card-text text-secondary fs-5">@((Joke != null) ? Joke.Text : "")</p>
    </div>

</div>

  <!-- Joke Footer -->

<div class="d-flex justify-content-between align-items-center px-5 py-2" style="min-height:56px;">
    <button class="btn btn-sm btn-light"
            title="Like" @onclick="() => OnRateClick(true)">
        <i class="bi @(_isLiked == true ? "bi-hand-thumbs-up-fill" : "bi-hand-thumbs-up")"></i>
        <span class="ms-1">@Joke?.TotalLikes</span>
    </button>
    <button class="btn btn-sm btn-light"
            title="Dislike" @onclick="() => OnRateClick(false)">
        <i class="bi @(_isLiked == false ? "bi-hand-thumbs-down-fill" : "bi-hand-thumbs-down")"></i>
        <span class="ms-1">@Joke?.TotalDislikes</span>
    </button>
    <button class="btn btn-sm btn-light"
            title="Save joke" @onclick="OnSaveClick">
        <i class="bi @(_isSaved == true ? "bi-bookmark-fill" : "bi-bookmark")"></i>
    </button>
    <button class="btn btn-sm btn-light d-flex align-items-center"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#collapse_comments_@Joke?.JokeId"
            aria-expanded="false"
            aria-controls="collapse_comments_@Joke?.JokeId">
        <i class="bi bi-chat-right-dots"></i>
        <span class="ms-1">@Joke?.Comments.Count</span>
    </button>
</div>

<!-- Modal -->
<AppModal @ref="Modal">
    <Title>Notification</Title>
    <Body>
        <p>Are you sure you want to delete this joke?</p>
        <p class="text-danger">This action cannot be undone.</p>
    </Body>
    <Footer>
        <button class="btn btn-secondary" @onclick="() => { if (Modal != null) Modal.Close(); }">Cancel</button>
        <button class="btn btn-danger" @onclick="async () => await HandleDelete()">Delete</button>
    </Footer>
</AppModal>



