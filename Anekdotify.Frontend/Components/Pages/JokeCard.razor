@using Anekdotify.Frontend.Components.BaseComponents
@using Microsoft.AspNetCore.Mvc
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ApiClient ApiClient
@inject IToastService ToastService
@rendermode RenderMode.InteractiveServer

<div class="card text-bg-light shadow-sm rounded-4 mb-4 p-3 position-relative h-100"
style="width: 100%; min-height: 300px; max-height: 300px;">
    <div class="card-header bg-transparent border-bottom-0 d-flex align-items-center justify-content-between">
        <div class="d-flex align-items-center">
            <a class="btn btn-outline-secondary btn-sm me-2" href="@JokeUrl(Joke.JokeId)" title="Edit">
                <i class="bi bi-pencil"></i>
            </a>
            <button class="btn btn-outline-danger" @onclick="() => {DeleteId = Joke.JokeId; Modal.Show();}">
                <i class="bi bi-trash"></i>
            </button>
        </div>
    </div>

    <div class="card-body d-flex flex-column justify-content-center align-items-center text-center pb-5">
        <p class="card-text text-secondary">@Joke.Text</p>
    </div>

    <div class="position-absolute bottom-0 end-0 p-3">
        <div class="position-relative">
            <button class="btn btn-outline-secondary rounded-circle shadow-sm"
            data-bs-toggle="collapse"
            data-bs-target="#addNewCommentToJoke_@Joke.JokeId" 
            aria-expanded="false" 
            aria-controls="collapseExample">
                <i class="bi bi-plus-circle-dotted"></i>
            </button>


            <button class="btn btn-outline-secondary rounded-circle shadow-sm"
            data-bs-toggle="collapse"
            data-bs-target="#commentCollapseToJoke_@Joke.JokeId" 
            aria-expanded="false" 
            aria-controls="collapseExample">
                <i class="bi bi-chat"></i>
            </button>

            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                @Joke.Comments.Count
            </span>
        </div>
    </div>
</div>

<div data-bs-spy="scroll" 
data-bs-target="#" 
data-bs-root-margin="0px 0px -40%" 
data-bs-smooth-scroll="true" 
class="scrollspy-example bg-body-light p-3 rounded-2"
tabindex="0"
style="max-height: 400px; overflow-y: auto;">

    @foreach(var comment in Joke.Comments)
    {
        <CommentCard Comment="@comment"></CommentCard>
    }
</div>

<NewCommentForm JokeId="@Joke.JokeId"></NewCommentForm>

<AppModal @ref="Modal">
    <Title>Notification</Title>
    <Body>
        <p>Are you sure you want to delete this joke?</p>
        <p class="text-danger">This action cannot be undone.</p>
    </Body>
    <Footer>
        <button class="btn btn-secondary" @onclick="() => Modal.Close()">Cancel</button>
        <button class="btn btn-danger" @onclick="async () => await HandleDelete()">Delete</button>
    </Footer>
</AppModal>

@code {

    [Parameter]
    public JokeDTO Joke {get; set;}

    public AppModal Modal { get; set; }

    public int DeleteId { get; set; }


    private static string JokeUrl(int id) => $"/editJoke/{id}";

    private async Task HandleDelete()
    {
        var res = await ApiClient.DeleteAsync($"api/joke/{DeleteId}");
        if (!res.IsSuccessStatusCode)
        {
            ToastService.ShowError("Failed to delete joke");
            return;
        }
        ToastService.ShowSuccess("Joke deleted successfully");
        Modal.Close();
        NavigationManager.NavigateTo("/", true);
    }
}
