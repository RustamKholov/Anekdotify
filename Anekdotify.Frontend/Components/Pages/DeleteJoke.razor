
@inject JokesClient jokesClient
@inject NavigationManager NavigationManager 
@rendermode RenderMode.InteractiveServer

<div class="modal fade" id="@GetModalId(Joke)" tabindex="-1" aria-labelledby="jokeLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="jokeLabel">@Title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this joke</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="@ConfirmAsync">Delete</button>
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public JokeDTO Joke {get; set;}

    private string Title = "Deleting joke";
    public static string GetModalId(JokeDTO joke)
    {
        ArgumentNullException.ThrowIfNull(joke);
        return $"modal_{joke.JokeId}";
    }

    private async Task ConfirmAsync()
    {
        await jokesClient.DeleteJoke(Joke!.JokeId);
        NavigationManager.Refresh();
    }
}
