@inject ApiClient ApiClient
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

    @if (IsActive)
    {
    <button class="btn btn-secondary btn-lg w-md-auto" @onclick="GetAJoke">Get Daily Joke</button>
    }
    else
    {
        <button type="button" class="btn btn-outline-secondary btn-lg w-md-auto" disabled>
            Get Daily Joke
        </button>

        <div class="mt-2 small text-muted text-center">
            <i class="bi bi-clock"></i> Next joke after @_randomJokeAvalibleAt.ToString("g")
        </div>
    }

@code {
    public bool IsActive = true;
    private DateTime _randomJokeAvalibleAt = DateTime.Now;

    [Parameter]
    public Func<Task>? GetRandomJoke { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var isActiveRes = await ApiClient.GetAsync<IsActiveRandomResponse>("api/joke/random/isActive");
        if (isActiveRes.IsSuccess && isActiveRes.Data != null)
        {
            IsActive = isActiveRes.Data.IsActive;
            _randomJokeAvalibleAt = isActiveRes.Data.NextRandomJokeAvailableAt;
        }
        else
        {
            ToastService.ShowError(isActiveRes.ErrorMessage ?? "Failed to check joke availability.");
        }
    }
    private async Task GetAJoke()
    {
        if (GetRandomJoke != null)
        {
            await GetRandomJoke.Invoke();
            var isActiveRes = await ApiClient.GetAsync<IsActiveRandomResponse>("api/joke/random/isActive");
            if (isActiveRes.IsSuccess && isActiveRes.Data != null)
            {
                IsActive = isActiveRes.Data.IsActive;
                _randomJokeAvalibleAt = isActiveRes.Data.NextRandomJokeAvailableAt;
                NavigationManager.Refresh();
            }
            else
            {
                ToastService.ShowError(isActiveRes.ErrorMessage ?? "Failed to check joke availability.");
            }
        }
        else
        {
            ToastService.ShowError("GetRandomJoke function is not set.");
        }
    }
}
